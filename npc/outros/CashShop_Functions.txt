//===== Cronus Script ========================================
//= Funções dos Items ROP's
//===== Por: =================================================
//= Dojo
//===== Versão Atual: ========================================
//= [Conversão Aegis]
//= 1.0
//===== Compatibilidade: =====================================
//= Cronus / eAthena
//===== Comentários Adicionais: ==============================
//= 1.0 Primeira Versão [Dojo]
//============================================================

// Kafra Card
//============================================================ 
// - Open player's storage.
// - No arguments.
function	script	F_CashStore	{
	cutin "kafra_01",2;
	mes "[Funcionária Kafra]";
	mes "Bem vindo à Corporação Kafra.";
	mes "Aqui, deixe-me abrir o seu armazém.";
	close2;
	openstorage;
	cutin "",255;
	return;
}


// Giant Fly Wing
//============================================================ 
// - Warp party leader to random spot on the map.
// - Summon Party members on party leader map to that location.
// - No arguments.
function	script	F_CashPartyCall	{
	warp "Random",0,0;
	if(getpartyleader(getcharid(1),2) == getcharid(0)) {
		getmapxy .@mapl$, .@xl, .@yl, 0;
		warpparty .@mapl$, .@xl, .@yl, getcharid(1), .@mapl$;
	}
	return;
}

/*
function	script	F_CashPartyCall2	{
	warp "Random",0,0;
	if(getpartyleader(getcharid(1),2) == getcharid(0)) {
		getmapxy .@mapl$, .@xl, .@yl, 0;
		getpartymember getcharid(1),2;
		set .@partymembercount, $@partymembercount;
		copyarray .@partymemberaid[0], $@partymemberaid[0], .@partymembercount;
		for(set .@i, 0; .@i < .@partymembercount; set .@i, .@i + 1) {
			if(attachrid(.@partymemberaid[.@i])) {
				if(strcharinfo(3) == .@mapl$ && HP > 0) { 
					warp .@mapl$, .@xl, .@yl;
				}
			}
		}
	}
	return;
}
*/

// Neuralizer
//============================================================ 
// - Reset players skills. Weight must be 0, options must be off.
// - No arguments.
function	script	F_CashReset	{
	if (Class != Job_Novice) {
		if (Weight < 1) { 
			if (checkriding() || checkfalcon() || checkcart()) return;
			else {
				resetskill;
				sc_end SC_ALL;
			}
		}
	}
	return;
}

// Dungeon Teleport Scroll
//============================================================ 
// - Warp player to random location of selected dungeon
//   due to lack of information.
// - No arguments.
function	script	F_CashDungeon	{
	switch(select("Calabouço de Magma:Mina Abandonada de Mjolnir (2):Estrada para o Outro Mundo:Calabouço da Mina:Caverna de Payon (3):Depósito da Fábrica de Brinquedos:Prisão Subterrânea de Glast Heim (0):Suei Long Gon:Tabuleiro de Go:ITúnel Submarino (3):Calabouço da Ilha da Tartaruga:Torre do Relógio (s3):Torre do Relógio (3):Esgoto de Glast Heim (2):Esfinge (4):Dentro da Pirâmide (4):Esgoto de Prontera (3):Labirinto de Tatames:Laboratório de Somatologia:Interior do Santuário Ancestral"))
	{
	case 1: warp "mag_dun01",125,71; end;		// Calabouço de Magma
	case 2: warp "mjo_dun02",80,297; end;		// Mina Abandonada de Mjolnir (2)
	case 3: warp "um_dun02",125,122; end;		// Estrada para o Outro Mundo
	case 4: warp "ein_dun01",261,262; end;		// Calabouço da Mina
	case 5: warp "pay_dun03",155,150; end;		// Caverna de Payon (3)
	case 6: warp "xmas_dun01",133,130; end;		// Depósito da Fábrica de Brinquedos
	case 7: warp "gl_prison",140,15;end;		// Prisão Subterrânea de Glast Heim
	case 8: warp "lou_dun03",165,38; end;		// Suei Long Gon
	case 9: warp "gon_dun02",251,263; end;		// Tabuleiro de Go
	case 10: warp "iz_dun02",350,335; end;		// Túnel Submarino (3)
	case 11: warp "tur_dun02",165,30; end;		// Calabouço da Ilha da Tartaruga
	case 12: warp "alde_dun03",275,180; end;	// Torre do Relógio (s3)
	case 13: warp "c_tower3",34,42; end;		// Torre do Relógio (3)
	case 14: warp "gl_sew02",292,295; end;		// Esgoto de Glast Heim (2)
	case 15: warp "in_sphinx4",120,120; end;	// Esfinge (4)
	case 16: warp "moc_pryd04",195,4; end;		// Dentro da Pirâmide (4)
	case 17: warp "prt_sewb3",20,175; end;		// Esgoto de Prontera (3)
	case 18: warp "ama_dun01",222,144; end;		// Labirinto de Tatames
	case 19: warp "lhz_dun01",19,153; end;		// Laboratório de Somatologia
	case 20: warp "ayo_dun02",70,240; end;		// Interior do Santuário Ancestral
	}
	return;
}

// Coloured Butterly Wings
//============================================================ 
// - Warp player to differents Citys acording to the Scroll
// - Arg(0) = type of scroll.
function	script	F_CashCity	{
	switch(getarg(0))
	{
		// Yellow
		case 1: switch(select("Prontera:Geffen:Payon:Morroc:Aldebaran:Alberta")) {
			case 1: warp "prontera",0,0; end;
			case 2: warp "geffen",0,0; end;
			case 3: warp "payon",0,0; end;
			case 4: warp "morocc",0,0; end;
			case 5: warp "aldebaran",0,0; end;
			case 6: warp "alberta",0,0; end;
			}
		break;
		// Green
		case 2: switch(select("Juno:Lighthalzen:Einbroch:Hugel")) {
			case 1: warp "yuno",0,0; end;
			case 2: warp "lighthalzen",0,0; end;
			case 3: warp "einbroch",0,0; end;
			case 4: warp "hugel",0,0; end;
			}
		break;
		// Red
		case 3: switch(select("Rachel:Veins")) {
			case 1: warp "rachel",0,0; end;
			case 2: warp "veins",0,0; end;
			}
		break;
		// Blue
		case 4: switch(select("Ayothaya:Amatsu:Louyang:Kunlun")) {
			case 1: warp "ayothaya",0,0; end;
			case 2: warp "amatsu",0,0; end;
			case 3: warp "louyang",0,0; end;
			case 4: warp "gonryun",0,0; end;
			}
		break;
	}
	return;
}

// Teleport Scrolls
//============================================================ 
// - Warp player to save point or City acording to the Scroll
// - Arg(0) = type of scroll.
function	script	F_CashTele	{
	switch(getarg(0)) {
	case 1:
		switch(select("Ponto de Retorno:Prontera:Geffen:Al de Baran:Izlude")) {
		case 1: warp "SavePoint",0,0; end;
		case 2: warp "prontera",167,68; end;
		case 3: warp "geffen",121,147; end;
		case 4: warp "aldebaran",168,112; end;
		case 5: warp "izlude",128,105; end;
		}
	case 2:
		switch(select("Ponto de Retorno:Payon:Alberta:Morroc:Comodo")) {
		case 1: warp "SavePoint",0,0; end;
		case 2: warp "payon",172,101; end;
		case 3: warp "alberta",117,56; end;
		case 4: warp "morocc",165,255; end;
		case 5: warp "comodo",193,148; end;
		}
	case 3:
		switch(select("Ponto de Retorno:Louyang:Amatsu:Campo de Kunlun:Ayothaya")) {
		case 1: warp "SavePoint",0,0; end;
		case 2: warp "louyang",216,40; end;
		case 3: warp "amatsu",197,83; end;
		case 4: warp "gon_fild01",258,82; end;
		case 5:warp "ayothaya",149,71; end;
		}
	case 4:
		switch(select("Ponto de Retorno:Campo de Lutie:Umbala:Niflheim")) {
		case 1: warp "SavePoint",0,0; end;
		case 2: warp "xmas_fild01",78,68; end;
		case 3: warp "umbala",100,154; end;
		case 4: warp "niflheim",49,146; end;
		}
	case 5:
		switch(select("Ponto de Retorno:Juno:Einbroch:Lighthalzen:Hugel")) {
		case 1: warp "SavePoint",0,0; end;
		case 2: warp "yuno",158,39; end;
		case 3: warp "einbroch",240,200; end;
		case 4: warp "lighthalzen",214,311; end;
		case 5: warp "hugel",95,43; end;
		}
	case 6:
		switch(select("Ponto de Retorno:Rachel:Veins")) {
		case 1: warp "SavePoint",0,0; end;
		case 2: warp "rachel",115,125; end;
		case 3: warp "veins",205,102; end;
		}
	}
	return;
}

function	script	F_CashSeigeTele	{
	switch(select("Sirius (aldeg_cas01):Astrum (aldeg_cas02):Canopus (aldeg_cas03):Rigel (aldeg_cas04):Acrux (aldeg_cas05):Arsulf (gefg_cas01):Trapesac (gefg_cas02):Ruaden (gefg_cas03):Saffran (gefg_cas04):Arima (gefg_cas05):Palácio do Sol (payg_cas01):Palácio do Lago Sagrado (payg_cas02):Palácio das Sombras (payg_cas03):Palácio Escarlate (payg_cas04):Palácio da Colina (payg_cas05):Kriemhild (prtg_cas01):Hrist (prtg_cas02):Brynhildr (prtg_cas03):Skoelgul (prtg_cas04):Gondul (prtg_cas05)")) {
	case 1: warp "alde_gld",48,91; end;
	case 2: warp "alde_gld",103,245; end;
	case 3: warp "alde_gld",142,87; end;
	case 4: warp "alde_gld",236,243; end;
	case 5: warp "alde_gld",269,90; end;
	case 6: warp "gef_fild13",217,75; end;
	case 7: warp "gef_fild13",307,237; end;
	case 8: warp "gef_fild13",77,297; end;
	case 9: warp "gef_fild13",190,276; end;
	case 10: warp "gef_fild13",312,91; end;
	case 11: warp "pay_gld",121,232; end;
	case 12: warp "pay_gld",297,116; end;
	case 13: warp "pay_gld",318,293; end;
	case 14: warp "pay_gld",140,164; end;
	case 15: warp "pay_gld",202,264; end;
	case 16: warp "prt_gld",141,64; end;
	case 17: warp "prt_gld",240,131; end;
	case 18: warp "prt_gld",153,133; end;
	case 19: warp "prt_gld",126,240; end;
	case 20: warp "prt_gld",195,240; end;
	}
	return;
}
